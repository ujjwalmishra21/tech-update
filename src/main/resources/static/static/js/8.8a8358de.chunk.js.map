{"version":3,"sources":["components/Signup/Signup.js"],"names":["Signup","state","form","name","type","value","touched","error","valid","placeholder","validation","required","minLength","onSubmit","formIsValid","localeCompare","data","field","props","submitSignup","alert","onChange","event","inputField","updatedFormElement","updateObject","target","checkValidity","updatedForm","setState","this","initializeAuth","formElementArr","key","push","id","properties","className","map","element","label","variant","helperText","disabled","loading","onClick","color","message","status","text","to","severity","Fragment","Component","connect","auth","dispatch","actions"],"mappings":"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","file":"static/js/8.8a8358de.chunk.js","sourcesContent":["import React,{ Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport * as actions from '../../store/actions/index';\r\nimport './Signup.css';\r\nimport { checkValidity, updateObject } from '../../utility/utility';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nclass Signup extends Component{\r\n    state = {\r\n        form: {\r\n            \r\n                'username':{\r\n                    name:'username',\r\n                    type:'text',\r\n                    value:'',\r\n                    touched:false,\r\n                    error:null,\r\n                    valid:true,\r\n                    placeholder:'Enter username',\r\n                    validation:{\r\n                        required: true\r\n                    }\r\n                },\r\n                'password':{\r\n                    name:'password',\r\n                    type:'password',\r\n                    value:'',\r\n                    touched: false,\r\n                    valid:true,\r\n                    error:null,\r\n                    placeholder:'Enter password',\r\n                    validation:{\r\n                        required: true,\r\n                        minLength:8\r\n                    }\r\n                },\r\n                'confirmPassword':{\r\n                    name:'confirmPassword',\r\n                    type:'password',\r\n                    value:'',\r\n                    touched: false,\r\n                    valid: true,\r\n                    error:null,\r\n                    placeholder: 'Re-enter password',\r\n                    validation:{\r\n                        required: true,\r\n                        minLength:8\r\n                    }\r\n                }\r\n        },\r\n    \r\n        \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.props.initializeAuth();\r\n    }\r\n\r\n    onSubmit = () => {\r\n        if(this.state.formIsValid){\r\n            if(this.state.formIsValid){\r\n                if(this.state.form['confirmPassword'].value.localeCompare(this.state.form['password'].value) === 0){\r\n                    let data = {};\r\n                    for(let field in this.state.form){\r\n                        data[field] = this.state.form[field].value;\r\n                    }\r\n                    this.props.submitSignup(data);\r\n                }else{\r\n                    alert('Passwords do not match');\r\n                }\r\n                \r\n            }else{\r\n                alert('Fill all the fields correctly')\r\n            }\r\n        }else{\r\n            alert('Fill all the fields')\r\n        }\r\n        \r\n    }\r\n\r\n    onChange = (event, inputField) => {\r\n        \r\n        const updatedFormElement = updateObject(this.state.form[inputField],{\r\n            value: event.target.value,\r\n            valid: checkValidity(event.target.value, this.state.form[inputField].validation),\r\n            touched: true\r\n        });\r\n     \r\n        const updatedForm = updateObject(this.state.form,{\r\n            [inputField]: updatedFormElement\r\n        });\r\n        \r\n        let formIsValid = true;\r\n\r\n        for(let inputField in updatedForm){\r\n            formIsValid = updatedForm[inputField].touched && updatedForm[inputField].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({\r\n            form: updatedForm,\r\n            formIsValid: formIsValid\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n\r\n        let formElementArr = [];\r\n\r\n        for(let key in this.state.form){\r\n            formElementArr.push({\r\n                id: key,\r\n                properties : this.state.form[key]\r\n            });\r\n        }\r\n\r\n\r\n        let form = (\r\n            <form className=\"signup-form\">\r\n                {formElementArr.map(element => {\r\n                   return(\r\n                    <div key={element.id}>\r\n                       <TextField \r\n                            label={element.properties.name} \r\n                            variant=\"outlined\"\r\n                            error={element.properties.touched & !element.properties.valid } \r\n                            helperText={element.properties.error} \r\n                            value={element.properties.value} \r\n                            onChange={(event)=>this.onChange(event,element.properties.name)}\r\n                            type={element.properties.type}\r\n                            placeholder={element.properties.placeholder}\r\n                            className='text-field' /><br/>                            \r\n                    </div>\r\n                   );\r\n                })\r\n\r\n                }\r\n                <Button disabled={this.props.loading} onClick={this.onSubmit} variant='contained' color='primary'>Sign Up</Button>\r\n                \r\n            </form>\r\n        );\r\n        let message = \"\";\r\n     \r\n        if(this.props.status === 1 && this.props.message){\r\n            let text = <Link to=\"/\">Click here</Link>\r\n            message = ( <div className='alert-div'><Alert severity=\"success\">{this.props.message} {text} to Login</Alert></div>);\r\n        }\r\n        else if(this.props.status === 0 && this.props.message){\r\n            message = ( <div className='alert-div'><Alert severity=\"error\">{this.props.message}</Alert></div>);\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {form}\r\n                {message}              \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        message: state.auth.message,\r\n        status: state.auth.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        submitSignup: (data) => dispatch(actions.signup(data)),\r\n        initializeAuth: () => dispatch(actions.initializeVariables())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n"],"sourceRoot":""}
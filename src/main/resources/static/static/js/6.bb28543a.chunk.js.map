{"version":3,"sources":["elements/Loader/Loader.js","components/Posts/Post/Post.js","components/Posts/Posts.js"],"names":["useStyles","makeStyles","theme","root","display","marginLeft","spacing","Loader","props","classes","className","width","marginRight","marginBottom","boxShadow","cardHeader","whiteSpace","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","shareIcon","icon","fontSize","shareIconElement","padding","connect","state","username","auth","token","temp","data","dispatch","likeUnlikePost","id","actions","isLiked","likes","length","forEach","like","useState","liked","setLiked","useLocation","useEffect","postId","url","window","location","href","title","Card","CardHeader","subheader","moment","createdAt","fromNow","to","src","files","fileData","CardActions","disableSpacing","IconButton","aria-label","onClick","color","WhatsappShareButton","WhatsappIcon","round","TelegramShareButton","TelegramIcon","Posts","this","fetchData","post_html","loading","html","key","content","unshift","Component","error"],"mappings":"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","file":"static/js/6.bb28543a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nconst Loader = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport moment from 'moment';\r\nimport {Link, useLocation, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  FacebookIcon,\r\n  TelegramIcon,\r\n  WhatsappIcon,\r\n  FacebookShareButton,\r\n  TelegramShareButton,\r\n  WhatsappShareButton\r\n} from 'react-share';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 310,\r\n    marginRight: 25,\r\n    marginBottom: 25,\r\n    boxShadow: '1px 1px 0.5em',\r\n\r\n  },\r\n  cardHeader:{\r\n    width: '100%',\r\n    whiteSpace: 'nowrap',\r\n    \r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  shareIcon:{\r\n    \r\n  },\r\n  icon:{\r\n    fontSize: 30\r\n  },\r\n  shareIconElement:{\r\n    fontSize: 30,\r\n    padding: '12px'\r\n  }\r\n}));\r\n\r\nconst Post = (props) => {\r\n  const classes = useStyles();\r\n\r\n  let isLiked = false;\r\n  if(props.likes.length > 0){\r\n    props.likes.forEach(like => {\r\n      if(like.username === props.username){\r\n        isLiked = true;\r\n      }\r\n    })\r\n  }\r\n\r\n  const [liked, setLiked] = useState(isLiked);\r\n\r\n  const handleLikeClick = () => {\r\n    props.likeUnlikePost(props.token, props.postId);\r\n  }\r\n  const location = useLocation();\r\n  const handleShareClick = async () => {\r\n    \r\n    if(navigator.share){\r\n      navigator.share({\r\n        url: `${window.location.href}posts/${props.postId}` ,\r\n        title: props.title\r\n      }).then(() => {\r\n        console.log('Data share successfully')})\r\n      .catch(err => {\r\n        console.log(\"Unable to share data\");\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(props.temp && props.temp.id === props.postId){\r\n      setLiked(!liked)\r\n    }\r\n  }, [props.temp])\r\n  const url = `${window.location.href}posts/${props.postId}`;\r\n  const title = props.title;\r\n\r\n//   <IconButton aria-label=\"share\" onClick={handleShareClick}>\r\n//   <ShareIcon />\r\n// </IconButton>\r\n\r\n return (\r\n    <div>\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        title={props.title}\r\n        subheader={moment(props.createdAt).fromNow()}\r\n      />\r\n     <Link to={`/posts/${props.postId}`}><img\r\n        src={`data:image/jpeg;base64,${props.files[0].fileData}`}\r\n        height=\"200px\"\r\n        width=\"300px\"\r\n      /></Link>\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\" onClick={handleLikeClick}>\r\n         { !liked ? <FavoriteBorderIcon className={classes.icon} /> :<FavoriteIcon className={classes.icon} color=\"secondary\"/> }\r\n        </IconButton>\r\n        <div>\r\n          <span className={classes.shareIcon}>\r\n            <WhatsappShareButton title={title} url={url}>\r\n              <WhatsappIcon className={classes.shareIconElement} round={true}/>\r\n            </WhatsappShareButton>\r\n          </span>\r\n          <span className={classes.shareIcon}>\r\n            <TelegramShareButton title={title} url={url}>\r\n              <TelegramIcon className={classes.shareIconElement} round={true}/>\r\n            </TelegramShareButton>\r\n          </span>\r\n        </div>\r\n      </CardActions>\r\n    </Card>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    username: state.auth.username,\r\n    token: state.auth.token,\r\n    temp: state.data.temp\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    likeUnlikePost: (token, id) => dispatch(actions.likePost(token, id))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './Posts.css';\r\nimport Post from './Post/Post';\r\nimport Loader from  '../../elements/Loader/Loader';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Posts extends Component{\r\n    componentDidMount(){\r\n        this.props.fetchData(this.props.token);\r\n    }\r\n    render(){\r\n        let post_html = [];\r\n        if(!this.props.loading){\r\n            if(this.props.data && this.props.data.length > 0){\r\n                \r\n                for(let data of this.props.data){\r\n                    \r\n                    let html = <Post key={data.id} postId={data.id} title={data.title} content={data.title} files={data.files} createdAt={data.createdAt} likes={data.likes} />;   \r\n                    post_html.unshift(html);\r\n                }\r\n            }\r\n            \r\n        }else{\r\n            post_html = <Loader/>;\r\n        }\r\n\r\n        return(\r\n            <div className=\"posts-section\">\r\n                {post_html} \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.data.loading,\r\n        data: state.data.data,\r\n        error: state.data.error,\r\n        token: state.auth.token,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchData: (token) => dispatch(actions.fetchData(token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);"],"sourceRoot":""}
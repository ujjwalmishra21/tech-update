{"version":3,"sources":["utility/utility.js","hoc/asyncComponent/asyncComponent.js","elements/NavBar/NavBar.js","elements/Footer/Footer.js","App.js","serviceWorker.js","store/reducers/data.js","store/reducers/auth.js","index.js","store/actions/actionTypes.js","axios-order.js","store/actions/data.js","store/actions/auth.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","asyncComponent","importComponent","state","component","then","cmp","setState","default","C","this","props","Component","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","backgroundColor","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","navTitle","fontFamily","letterSpacing","links","textDecoration","NavBar","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","paths","map","link","index","key","to","path","ListItem","button","text","ListItemText","primary","Footer","asyncPosts","asyncPostHome","asyncLogout","asyncLogin","asyncSignup","App","onTryAutoLogin","route","exact","isAuthenticated","withRouter","connect","auth","token","dispatch","actions","Boolean","window","location","hostname","match","initialState","data","postData","temp","loading","error","status","addDataStart","action","addDataSuccess","addDataFail","fetchDataStart","fetchDataSuccess","fetchDataFail","fetchDataByIdStart","fetchDataByIdSuccess","fetchDataByIdFail","likePostStart","likePostSuccess","reducer","type","actionTypes","message","authRedirectPath","username","initializeReqVariables","signupStart","signupFail","signupSuccess","authInitStart","authInitFail","authInitSuccess","authLogout","setAuthRedirectionPath","composeEnhancers","compose","rootReducers","combineReducers","dataReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","ADD_DATA_START","ADD_DATA_SUCCESS","ADD_DATA_FAIL","FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAIL","FETCH_DATA_BY_ID_SUCCESS","FETCH_DATA_BY_ID_START","FETCH_DATA_BY_ID_FAIL","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAIL","AUTH_INIT_START","AUTH_INIT_SUCCESS","AUTH_INIT_FAIL","LIKE_POST_START","LIKE_POST_SUCCESS","LIKE_POST_FAIL","SET_AUTH_REDIRECTION_PATH","AUTH_LOGOUT","INITIALIZE_REQ_VARIABLES","instance","axios","baseURL","fetchData","config","headers","get","response","err","fetchDataById","id","likePostFail","likePost","post","initializeVariables","signup","authInit","log","JSON","stringify","param","localStorage","setItem","logout","removeItem","authCheckState","getItem"],"mappings":"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","file":"static/js/main.d4f2b94a.chunk.js","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n          \r\n    if(!rules){\r\n        return true;\r\n    }\r\n    \r\n    if(rules.required && isValid){\r\n        isValid = value.trim() && isValid;\r\n    }\r\n\r\n    if(rules.minLength){\r\n        isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if(rules.maxLength){\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n\r\n};","import React, {Component} from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component{\r\n        state = {\r\n            component: null\r\n        };\r\n        \r\n        componentDidMount() {\r\n            importComponent().then(cmp => {\r\n                this.setState({component: cmp.default});\r\n            });\r\n        }\r\n\r\n        render(){\r\n            const C = this.state.component;\r\n\r\n            return C ? <C {...this.props}/> : null;\r\n        }\r\n    };\r\n};\r\n\r\nexport default asyncComponent;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor:'black !important',\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  navTitle:{\r\n      fontFamily:'Impact, fantasy',\r\n      letterSpacing:'5px',\r\n  },\r\n  links:{\r\n      textDecoration:'none'\r\n  },\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const links = [\r\n  //     {text:'Home', path:'/'}\r\n  // ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" className={classes.navTitle} noWrap>\r\n             Tech Updates\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {props.paths.map((link, index) => (\r\n            <div  key={index}>\r\n              <Link to={link.path} className={classes.links}>\r\n                <ListItem button key={link.text}>\r\n                  <ListItemText primary={link.text} />\r\n                </ListItem>\r\n              </Link>\r\n              <Divider />\r\n            </div>\r\n          ))}\r\n        </List>\r\n            \r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n      \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = (props) => {\r\n\r\n  return (\r\n    <div className=\"footer-root\">\r\n      <div className=\"footer\">\r\n        <div className=\"footer-content\">Copyright &copy; 2021 Nerdy Developer</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Route, Redirect, Switch, withRouter} from 'react-router-dom';  \r\nimport { connect } from 'react-redux';\r\n\r\nimport './App.css';\r\n\r\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\r\nimport NavBar from '../src/elements/NavBar/NavBar';\r\nimport Footer from './elements/Footer/Footer';\r\n\r\nimport * as actions from './store/actions/index';\r\n\r\n\r\n\r\nconst asyncPosts = asyncComponent(() => {\r\n  return import ('./components/Posts/Posts');\r\n});\r\n\r\nconst asyncPostHome = asyncComponent(() => {\r\n  return import ('./components/PostHome/PostHome');\r\n});\r\n\r\nconst asyncLogout = asyncComponent(() => {\r\n  return import ('./components/Logout/Logout');\r\n});\r\n\r\nconst asyncLogin = asyncComponent(() => {\r\n  return import ('./components/Login/Login');\r\n});\r\n\r\nconst asyncSignup = asyncComponent(() => {\r\n  return import ('./components/Signup/Signup');\r\n});\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    this.props.onTryAutoLogin();\r\n  }\r\n  render(){\r\n    let route = (\r\n      <Switch>\r\n        <Route exact path=\"/signup\" component={asyncSignup} />\r\n        <Route exact path=\"/\" component={asyncLogin} />\r\n        <Route path=\"*\">\r\n            <Redirect to=\"/\"/>\r\n          </Route>\r\n      </Switch>\r\n    );\r\n\r\n    let paths = [\r\n      {text:'Log In', path:'/'},\r\n      {text:'Sign Up', path:'/signup'}\r\n    ];    \r\n    \r\n    if(this.props.isAuthenticated){\r\n     \r\n      route = (\r\n        <Switch>\r\n          <Route exact path=\"/posts/:postId\" component={asyncPostHome} />\r\n          <Route exact path=\"/logout\" component={asyncLogout} />\r\n          <Route exact path=\"/\" component={asyncPosts}/>\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\"/>\r\n          </Route>\r\n        </Switch>\r\n      );\r\n      paths = [\r\n        {text:'Home', path:'/'},\r\n        {text:'Logout', path:'/logout'}\r\n      ];\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <NavBar paths={paths}/>\r\n        <header className=\"App-header\">\r\n          {route}\r\n        </header>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token != null\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoLogin: () => dispatch(actions.authCheckState())\r\n  };\r\n};\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../utility/utility';\r\n\r\nconst initialState = {\r\n    data: null,\r\n    postData: null,\r\n    temp: null,\r\n    loading: false,\r\n    error: null,\r\n    status: 0\r\n};\r\n\r\nconst addDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst addDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        data: action.data\r\n    });\r\n};\r\n\r\nconst addDataFail = (state, action) => {\r\n    return {\r\n        loading: false,\r\n        error: action.error\r\n    };\r\n};\r\n\r\nconst fetchDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst fetchDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        data: action.data\r\n    });\r\n};\r\n\r\nconst fetchDataFail = (state, action) => {\r\n    return {\r\n        loading: false,\r\n        error: action.error\r\n    };\r\n};\r\n\r\nconst fetchDataByIdStart = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst fetchDataByIdSuccess = (state, action) => {\r\n    return{\r\n        loading: false,\r\n        postData: action.postData\r\n    };\r\n};\r\n\r\nconst fetchDataByIdFail = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: action.error\r\n    });\r\n};\r\n\r\nconst likePostStart = (state, action) => {\r\n    return updateObject(state, {\r\n        // loading: true\r\n    });\r\n};\r\n\r\nconst likePostSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        // loading: false,\r\n        temp: action.data\r\n    });\r\n};\r\n\r\n\r\nconst likePostFail = (state, action) => {\r\n    return {\r\n        // loading: false,\r\n    };\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_DATA_START:\r\n            return addDataStart(state, action);\r\n        case actionTypes.ADD_DATA_SUCCESS:\r\n            return addDataSuccess(state, action);\r\n        case actionTypes.ADD_DATA_FAIL:\r\n            return addDataFail(state, action);\r\n        case actionTypes.FETCH_DATA_START:\r\n            return fetchDataStart(state, action);\r\n        case actionTypes.FETCH_DATA_SUCCESS:\r\n            return fetchDataSuccess(state, action);\r\n        case actionTypes.FETCH_DATA_FAIL:\r\n            return fetchDataFail(state, action);\r\n        case actionTypes.FETCH_DATA_BY_ID_SUCCESS:\r\n            return fetchDataByIdSuccess(state, action);\r\n        case actionTypes.FETCH_DATA_BY_ID_START:\r\n            return fetchDataByIdStart(state, action);\r\n        case actionTypes.FETCH_DATA_BY_ID_FAIL:\r\n            return fetchDataByIdFail(state, action); \r\n        case actionTypes.LIKE_POST_START:\r\n            return likePostStart(state, action);\r\n        case actionTypes.LIKE_POST_SUCCESS:\r\n            return likePostSuccess(state, action);\r\n        case actionTypes.LIKE_POST_FAIL:\r\n            return likePostFail(state, action)       \r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\n\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../../utility/utility';\r\n\r\nconst initialState= {\r\n    token: null,\r\n    message: null,\r\n    data: null,\r\n    status: -1,\r\n    loading: false,\r\n    authRedirectPath: '/',\r\n    username: null\r\n};\r\n\r\nconst initializeReqVariables = (state, action) => {\r\n    return updateObject(state, {message: null, status: -1});  \r\n} \r\n\r\nconst signupStart = (state, action) => {\r\n    return updateObject(state, { message: null, status: -1, loading: true });\r\n};\r\n\r\nconst signupFail = (state, action) => {\r\n    return updateObject(state, { loading: false, status: 0, message: action.message });\r\n}\r\n\r\nconst signupSuccess = (state, action) => {\r\n    return updateObject(state, { loading: false, status: 1, data: action.data, message: action.message });\r\n}\r\n\r\nconst authInitStart = (state, action) => {\r\n    return updateObject(state, { message: null, status: -1, loading: true });\r\n};\r\n\r\nconst authInitFail = (state, action) => {\r\n    return updateObject(state, { loading: false, status: 0, message: action.message });\r\n};\r\n\r\nconst authInitSuccess = (state, action) => {\r\n    return updateObject(state, { loading: false, status: 1, token: action.token, username: action.username });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { loading: false, token: null, message: null, data: null });\r\n};\r\n\r\nconst setAuthRedirectionPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path });\r\n};\r\n\r\nconst reducer =  (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SIGNUP_START:\r\n            return signupStart(state, action);\r\n        case actionTypes.SIGNUP_FAIL:\r\n            return signupFail(state, action);\r\n        case actionTypes.SIGNUP_SUCCESS:\r\n            return signupSuccess(state, action);\r\n        case actionTypes.AUTH_INIT_START:\r\n            return authInitStart(state, action);\r\n        case actionTypes.AUTH_INIT_FAIL:\r\n            return authInitFail(state, action);\r\n        case actionTypes.AUTH_INIT_SUCCESS:\r\n            return authInitSuccess(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECTION_PATH:\r\n            return setAuthRedirectionPath(state, action);\r\n        case actionTypes.INITIALIZE_REQ_VARIABLES:\r\n            return initializeReqVariables(state, action);\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport dataReducer from './store/reducers/data';\r\nimport authReducer from './store/reducers/auth';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\n\r\nconst rootReducers = combineReducers({\r\n  data: dataReducer,\r\n  auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducers, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App/>\r\n      </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  app,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","\r\nexport const ADD_DATA_START = 'ADD_DATA_START';\r\nexport const ADD_DATA_SUCCESS = 'ADD_DATA_SUCCESS';\r\nexport const ADD_DATA_FAIL = 'ADD_DATA_FAIL';\r\n\r\nexport const ADD_PHOTO_START = 'ADD_PHOTO_START';\r\nexport const ADD_PHOTO_SUCCESS = 'ADD_PHOTO_SUCCESS';\r\nexport const ADD_PHOTO_FAIL = 'ADD_PHOTO_FAIL';\r\n\r\nexport const FETCH_DATA_START = 'FETCH_DATA_START';\r\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\r\nexport const FETCH_DATA_FAIL = 'FETCH_DATA_FAIL';\r\n\r\nexport const FETCH_DATA_BY_ID_SUCCESS = 'FETCH_DATA_BY_ID_SUCCESS';\r\nexport const FETCH_DATA_BY_ID_START = 'FETCH_DATA_BY_ID_START';\r\nexport const FETCH_DATA_BY_ID_FAIL = 'FETCH_DATA_BY_ID_FAIL';\r\n\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const AUTH_INIT_START = 'AUTH_INIT_START';\r\nexport const AUTH_INIT_SUCCESS = 'AUTH_INIT_SUCCESS';\r\nexport const AUTH_INIT_FAIL = 'AUTH_INIT_FAIL';\r\n\r\nexport const LIKE_POST_START = 'LIKE_POST_START';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAIL = 'LIKE_POST_FAIL';\r\n\r\nexport const SET_AUTH_REDIRECTION_PATH = 'SET_AUTH_REDIRECTION_PATH';\r\n\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const INITIALIZE_REQ_VARIABLES = 'INITIALIZE_REQ_VARIABLES';\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'/'\r\n});\r\n\r\nexport default instance;","import axios from './../../axios-order';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const addDataFail = (error) => {\r\n    return {\r\n        type: actionTypes.ADD_DATA_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const addDataStart = () => {\r\n    return {\r\n        type: actionTypes.ADD_DATA_START\r\n    };\r\n};\r\n\r\nexport const addDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.ADD_DATA_SUCCESS,\r\n        data: data\r\n    };\r\n};\r\n\r\nexport const addData = (data) => {\r\n    return dispatch => {\r\n        dispatch(addDataStart());\r\n\r\n        axios.post('/data/add-data', data)\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    dispatch(addDataSuccess(response.data));\r\n                }else{\r\n                    dispatch(addDataFail('Request failed'));\r\n                }\r\n            }).catch(err => {\r\n                dispatch(addDataFail('Network error'));\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchDataFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_SUCCESS,\r\n        data: data \r\n    };\r\n};\r\n\r\nexport const fetchDataStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_START\r\n    };\r\n};\r\n\r\nexport const fetchData = (token) => {\r\n    return dispatch => {\r\n        dispatch(fetchDataStart());\r\n        \r\n        const config = {headers:{'Authorization': token}};\r\n        \r\n        axios.get('/data', config)\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    dispatch(fetchDataSuccess(response.data));\r\n                }else{\r\n                    dispatch(fetchDataFail('Request failed'))\r\n                }\r\n            }).catch(err => {\r\n                dispatch(fetchDataFail('Network error'));\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchDataByIdFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_BY_ID_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchDataByIdStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_BY_ID_START\r\n    };\r\n};\r\n\r\nexport const fetchDataByIdSuccess = (postData) => {\r\n    return {\r\n      type: actionTypes.FETCH_DATA_BY_ID_SUCCESS,\r\n      postData: postData\r\n    };\r\n};\r\n\r\nexport const fetchDataById = (token, id) => {\r\n    return dispatch => {\r\n        dispatch(fetchDataByIdStart());\r\n        \r\n        const config = {headers:{'Authorization': token}};\r\n\r\n        axios.get(`/data/${id}`,config)\r\n            .then(response => {\r\n               \r\n                if(response.status === 200){\r\n                    dispatch(fetchDataByIdSuccess(response.data));\r\n                }else{\r\n                    dispatch(fetchDataByIdFail('Request failed'))\r\n                }\r\n            }).catch(err => {\r\n                dispatch(fetchDataByIdFail('Network error'));\r\n            });\r\n    };\r\n};\r\n\r\nexport const likePostStart = () => {\r\n    return {\r\n        type: actionTypes.LIKE_POST_START,\r\n    };\r\n};\r\n\r\nexport const likePostSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.LIKE_POST_SUCCESS,\r\n        data: data\r\n    };\r\n};\r\n\r\nexport const likePostFail = (error) => {\r\n    return {\r\n        type: actionTypes.LIKE_POST_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const likePost = (token, id) => {\r\n    return dispatch => {\r\n        dispatch(likePostStart());\r\n\r\n        const config = {headers:{'Authorization': token}};\r\n\r\n        axios.post('/data/like',{ id: id }, config)\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    dispatch(likePostSuccess(response.data));\r\n                }else{\r\n                    dispatch(likePostFail('Request failed'));   \r\n                }\r\n            }).catch(error => {\r\n                dispatch(likePostFail(error));\r\n            });\r\n     \r\n    };\r\n};","import axios from '../../axios-order';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const initializeReqVariables = () => {\r\n    return {\r\n        type: actionTypes.INITIALIZE_REQ_VARIABLES\r\n    };\r\n};\r\n\r\nexport const initializeVariables = () => {\r\n    return dispatch => {\r\n        dispatch(initializeReqVariables());\r\n    };\r\n};\r\n\r\nexport const signupStart = () => {\r\n    return {\r\n        type: actionTypes.SIGNUP_START\r\n    };\r\n};\r\n\r\nexport const signupSuccess = (data, message) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_SUCCESS,\r\n        data: data,\r\n        message: message\r\n    };\r\n};\r\n\r\nexport const signupFail = (message) => {\r\n    return {\r\n        type: actionTypes.SIGNUP_FAIL,\r\n        message: message\r\n    };\r\n} ;\r\n\r\nexport const signup = (data) => {\r\n    return dispatch => {\r\n        dispatch(signupStart());\r\n        axios.post('/user/create', data)\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    dispatch(signupSuccess(response.data, 'User signed up successfully.'));\r\n                }else{\r\n                    \r\n                    dispatch(signupFail('Request failed'));\r\n                }\r\n            }).catch(err => {\r\n                dispatch(signupFail('Signup failed. Try with different username.'));\r\n            });\r\n    };\r\n};\r\n\r\nexport const authInitStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_INIT_START\r\n    };\r\n};\r\n\r\nexport const authInitSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.AUTH_INIT_SUCCESS,\r\n        token: data['token'],\r\n        username: data['username']\r\n    };\r\n};\r\n\r\nexport const authInitFail = (message) => {\r\n    return {\r\n        type: actionTypes.AUTH_INIT_FAIL,\r\n        message: message\r\n    };\r\n};\r\n\r\nexport const authInit = (data) => {\r\n    return dispatch => {\r\n        dispatch(authInitStart());\r\n        axios.post('/login', data)\r\n            .then(response => {\r\n                console.log(JSON.stringify(response.status));\r\n                if(response.status === 200 && response.data){\r\n\r\n                    const param = {\r\n                        'token': response.data['token'],\r\n                        'username': response.data['username']\r\n                    };\r\n                   \r\n                    localStorage.setItem('token', param['token']);\r\n                    localStorage.setItem('username', param['username']);\r\n                    dispatch(authInitSuccess(param));\r\n\r\n                }else{\r\n                    console.log(JSON.stringify(response));\r\n                    dispatch(authInitFail('Request failed'));\r\n                }\r\n            }).catch(err => {\r\n                if(err.response && err.response.data){\r\n                    console.log(err.response.status);\r\n                    switch(err.response.status){\r\n                        case 401:\r\n                            return dispatch(authInitFail('Invalid username or password'));\r\n                        default:\r\n                            return dispatch(authInitFail('Error login'))\r\n                    }\r\n                }\r\n                dispatch(authInitFail('Network message'));\r\n                \r\n                \r\n            });\r\n\r\n    };\r\n}; \r\n\r\nexport const setAuthRedirectionPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECTION_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('username');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        const username = localStorage.getItem('username');\r\n        const data = {\r\n            token: token,\r\n            username: username\r\n        }\r\n        \r\n        if(!data['token']){\r\n            dispatch(logout);\r\n        }else{\r\n            dispatch(authInitSuccess(data));\r\n        }\r\n    };\r\n};"],"sourceRoot":""}